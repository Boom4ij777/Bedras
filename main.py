import requests
import time

TOKEN = "8064402986:AAF8Wh9hpykcJYawFmpocZAANBBEMNy47P4"
URL = f"https://api.telegram.org/bot{TOKEN}/"

OWNER_ID = 7817919248

TASK_TEXT = (
    "–ó–ê–î–ê–ù–ò–Ø 1 –ü–ï–†–ï–ô–î–ò–¢–ï –ü–û –°–°–´–õ–ö–ï –ò –ü–û–î–ü–ò–®–ò–¢–ï–°–¨ –ù–ê –ö–ê–ù–ê–õ–´ "
    "–ò –û–¢–ü–†–ê–í–¨–¢–ï –°–ö–†–ò–ù –í –ë–û–¢–ê\n"
    "https://t.me/patrickstarsrobot?start=7817919248"
)

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ–π—á–∞—Å –æ—Ç–≤–µ—á–∞–µ—Ç
reply_target_user_id = None
awaiting_reply_message = False

def send_message(chat_id, text, reply_markup=None):
    data = {
        "chat_id": chat_id,
        "text": text,
    }
    if reply_markup:
        data["reply_markup"] = reply_markup
    requests.post(URL + "sendMessage", json=data)

def forward_message(chat_id_to, chat_id_from, message_id, reply_markup=None):
    data = {
        "chat_id": chat_id_to,
        "from_chat_id": chat_id_from,
        "message_id": message_id,
    }
    if reply_markup:
        data["reply_markup"] = reply_markup
    requests.post(URL + "forwardMessage", data=data)

def get_updates(offset=None):
    params = {"timeout": 100}
    if offset:
        params["offset"] = offset
    resp = requests.get(URL + "getUpdates", params=params)
    return resp.json()

def main():
    global reply_target_user_id, awaiting_reply_message
    update_id = None
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

    while True:
        result = get_updates(update_id)
        if not result["ok"]:
            time.sleep(1)
            continue

        updates = result["result"]
        for update in updates:
            update_id = update["update_id"] + 1

            if "message" in update:
                message = update["message"]
                chat_id = message["chat"]["id"]
                text = message.get("text", "")
                message_id = message["message_id"]

                # –ï—Å–ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å"
                if chat_id == OWNER_ID:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º callback_query - –∫–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ callback_query, –Ω–æ –∑–¥–µ—Å—å —É –Ω–∞—Å –æ–±—ã—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞,
                    # –ø–æ—ç—Ç–æ–º—É –∫–Ω–æ–ø–∫–∞ "–û—Ç–≤–µ—Ç–∏—Ç—å" –±—É–¥–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞.
                    if text == "/start":
                        keyboard = {
                            "keyboard": [["üìù –ó–ê–î–ê–ù–ò–ï"]],
                            "resize_keyboard": True
                        }
                        send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç, —Ö–æ–∑—è–∏–Ω! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É üëá", keyboard)
                    elif text == "üìù –ó–ê–î–ê–ù–ò–ï":
                        send_message(chat_id, TASK_TEXT)
                    elif text.startswith("–û—Ç–≤–µ—Ç–∏—Ç—å "):
                        # –ö–æ–º–∞–Ω–¥–∞ "–û—Ç–≤–µ—Ç–∏—Ç—å <user_id>"
                        parts = text.split()
                        if len(parts) == 2 and parts[1].isdigit():
                            reply_target_user_id = int(parts[1])
                            awaiting_reply_message = True
                            send_message(chat_id, f"–¢–µ–ø–µ—Ä—å –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {reply_target_user_id}. –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞.")
                        else:
                            send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π: –û—Ç–≤–µ—Ç–∏—Ç—å <user_id>")
                    elif awaiting_reply_message:
                        if reply_target_user_id is not None:
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                            send_message(reply_target_user_id, f"–û—Ç–≤–µ—Ç –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞:\n\n{text}")
                            send_message(chat_id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                            awaiting_reply_message = False
                            reply_target_user_id = None
                        else:
                            send_message(chat_id, "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –û—Ç–≤–µ—Ç–∏—Ç—å <user_id>.")
                    else:
                        send_message(chat_id, "–ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É üòÖ")

                else:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                    if text == "/start":
                        keyboard = {
                            "keyboard": [["üìù –ó–ê–î–ê–ù–ò–ï"]],
                            "resize_keyboard": True
                        }
                        send_message(chat_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É üëá", keyboard)
                    elif text == "üìù –ó–ê–î–ê–ù–ò–ï":
                        send_message(chat_id, TASK_TEXT)
                    elif "photo" in message:
                        # –ü–µ—Ä–µ—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ –≤–ª–∞–¥–µ–ª—å—Ü—É —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–≤–µ—Ç–∏—Ç—å <user_id>"
                        forward_message(OWNER_ID, chat_id, message_id)

                        keyboard = {
                            "keyboard": [[f"–û—Ç–≤–µ—Ç–∏—Ç—å {chat_id}"]],
                            "resize_keyboard": True,
                            "one_time_keyboard": True
                        }
                        send_message(OWNER_ID, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–∫—Ä–∏–Ω. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å.", keyboard)
                        send_message(chat_id, "–°–ø–∞—Å–∏–±–æ! –°–∫—Ä–∏–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–ª–∞–¥–µ–ª—å—Ü—É.")
                    else:
                        send_message(chat_id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª üòÖ")

        time.sleep(1)

if __name__ == "__main__":
    main()